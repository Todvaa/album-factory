import unittest

import recognizers
from dto import Photo


class RecognizerTest(unittest.TestCase):
    def test_face_vector(self):
        recognizer = recognizers.Recognizer('photos', [Photo('person1_1.png', '')])
        photos = recognizer.run()
        self.assertEqual([-0.08668062835931778, 0.05066731572151184, 0.002331793075427413, -0.07141682505607605,
                          -0.14782802760601044, -0.030624937266111374, -0.03799492493271828, -0.0467897392809391,
                          0.11317265033721924, -0.08401766419410706, 0.26681241393089294, 0.020052537322044373,
                          -0.19007667899131775, -0.1475137621164322, 0.029360225424170494, 0.14780573546886444,
                          -0.043984852731227875, -0.17631742358207703, -0.11972559243440628, -0.11182421445846558,
                          0.015410494059324265, 0.05097581818699837, -0.04683224484324455, 0.053042687475681305,
                          -0.23274217545986176, -0.27454444766044617, -0.09135978668928146, -0.09068389236927032,
                          -0.014151304960250854, -0.14669623970985413, 0.011175667867064476, 0.1847573071718216,
                          -0.16218562424182892, -0.05128956586122513, 0.08769723773002625, 0.10532263666391373,
                          -0.04419192299246788, -0.03978367894887924, 0.186065211892128, 0.03751891106367111,
                          -0.12780603766441345, 0.05118872597813606, 0.028592485934495926, 0.2665027976036072,
                          0.17291823029518127, -0.06399893760681152, 0.07143446058034897, -0.06791152060031891,
                          0.13894599676132202, -0.3343566656112671, 0.11602390557527542, 0.1487027257680893,
                          0.056731924414634705, 0.10105421394109726, 0.13771820068359375, -0.07400985807180405,
                          0.05547182261943817, 0.1806717813014984, -0.2545733153820038, 0.02566518820822239,
                          0.029868336394429207, -0.08196764439344406, -0.1700652539730072, -0.11212943494319916,
                          0.10966774076223373, 0.17017507553100586, -0.07267554849386215, -0.20562992990016937,
                          0.13045339286327362, -0.16558197140693665, -0.11101683974266052, 0.14419393241405487,
                          -0.10272301733493805, -0.1766524463891983, -0.32814809679985046, 0.11990021914243698,
                          0.29717230796813965, 0.2595779597759247, -0.20398138463497162, 0.09489893913269043,
                          0.00566239794716239, 0.014350627548992634, 0.05155789479613304, -0.07637857645750046,
                          -0.0770341083407402, -0.022820807993412018, -0.07808693498373032, 0.08814562112092972,
                          0.17840959131717682, 0.037603709846735, -0.013661042787134647, 0.26610952615737915,
                          0.04630354419350624, 0.03249669447541237, 0.09277696907520294, 0.05053536966443062,
                          -0.018568407744169235, -0.10667357593774796, -0.10109811276197433, -0.010228539817035198,
                          0.10711251944303513, -0.04874756932258606, -0.007688894402235746, 0.08860474824905396,
                          -0.15713293850421906, 0.19729794561862946, -0.09714363515377045, 0.0017854627221822739,
                          -0.07792811840772629, -0.05948185175657272, -0.08529288321733475, 0.05500166863203049,
                          0.11576256901025772, -0.2762162685394287, 0.1669541746377945, 0.10568021237850189,
                          -0.008906610310077667, 0.09774449467658997, 0.10184547305107117, -0.01632356457412243,
                          -0.06588691473007202, -0.13107457756996155, -0.15415042638778687, -0.09302765876054764,
                          0.12238010764122009, -0.02837608940899372, 0.002723872661590576, 0.006538340821862221],
                         photos[0].vectors[0].tolist())

    def test_face(self):
        photo_names = ['person1_1.png', 'person1_2.png', 'person2_1.png', 'person2_2.png', 'person3_1.png',
                       'person3_2.png']
        photos = [Photo(photo_name, '') for photo_name in photo_names]

        recognizer = recognizers.Recognizer('photos', photos)
        recognized_photos = recognizer.run()
        self.assertEqual(6, len(recognized_photos))
        for recognized_photo in recognized_photos:
            self.assertEqual(1, recognized_photo.face_count)
            self.assertEqual(1, len(recognized_photo.vectors))

    # def test_group_face(self):
    #     photo_names = ['group.png']
    #     photos = [Photo(photo_name, '') for photo_name in photo_names]
    #
    #     recognizer = recognizers.Recognizer('photos', photos)
    #     recognized_photos = recognizer.run()
    #     self.assertEqual(1, len(recognized_photos))
    #     self.assertEqual(5, recognized_photos[0].face_count)
    #     self.assertEqual(5, len(recognized_photos[0].vectors))

    def test_non_face(self):
        recognizer = recognizers.Recognizer('photos', [Photo('non_face.jpeg', '')])
        photos = recognizer.run()
        self.assertEqual(0, len(photos))


if __name__ == '__main__':
    unittest.main()
