version: '3.3'
services:
  db:
    image: postgres:13.0-alpine
    restart: always
    volumes:
      - db:/var/lib/db/data/
    expose:
      - ${DB_PORT}
    ports:
      - '${DB_EXTERNAL_PORT}:${DB_PORT}'
    env_file:
      - .env

  cache:
    image: redis:7.2-rc2-bookworm
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - cache:/var/lib/redis/data

  queue:
    image: rabbitmq:3.10.7-management
    restart: always
    expose:
      - ${RABBITMQ_PORT}
    ports:
      - '15672:15672'
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_logs:/var/log/rabbitmq
    env_file:
      - .env

  data_controller:
    build:
      dockerfile: docker/data_controller/Dockerfile
      context: .
    restart: always
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    expose:
      - '8000'
    depends_on:
      - db
      - queue
      - photos_downloader
      - photos_processor
    env_file:
      - .env
    entrypoint: '/bin/bash /app/entrypoint'

  photos_downloader:
    build:
      dockerfile: docker/photos_downloader/Dockerfile
      context: .
    restart: always
    depends_on:
      - queue
      - minio
    env_file:
      - .env

  photos_processor:
    build:
      dockerfile: docker/photos_processor/Dockerfile
      context: .
    restart: always
    depends_on:
      - queue
      - minio
    env_file:
      - .env

  photos_downloaded:
    build:
      dockerfile: docker/photos_downloaded/Dockerfile
      context: .
    restart: always
    depends_on:
      - queue
      - minio
      - db
    env_file:
      - .env

  photos_processed:
    build:
      dockerfile: docker/photos_processed/Dockerfile
      context: .
    restart: always
    depends_on:
      - queue
      - minio
      - db
    env_file:
      - .env

  nginx:
    image: nginx:1.19.3
    restart: always
    ports:
      - '80:80'
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    depends_on:
      - data_controller

  minio:
    image: bitnami/minio:2023.6.23-debian-11-r2
    restart: always
    ports:
      - '${S3_PORT}:${S3_PORT}'
      - '${S3_WEB_PORT}:${S3_WEB_PORT}'
    volumes:
      - minio_data:/var/lib/bitnami/data
    environment:
      MINIO_ROOT_USER: ${S3_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${S3_ROOT_PASSWORD}

volumes:
  static_value:
  media_value:
  # вечный том
  db:
  rabbitmq_data:
  rabbitmq_logs:
  cache:
    driver: local
  minio_data:
    driver: local